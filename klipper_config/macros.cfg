
[include speed_test.cfg]

[gcode_macro GOTO_CENTER]
description: Moves the print head to the center, 10mm above the plate
gcode:
  {% if printer.toolhead.homed_axes != "xyz" or not printer.quad_gantry_level.applied %}
    MOTION_INIT
  {% endif %}
  G1 X175 Y175 Z50 F7800


[gcode_macro MOTION_INIT]
description: Performs homing and gantry leveling
gcode:
  {% set WARMING_TEMP = 180 %}
  {% set EXTRUDER_TARGET_TEMP = printer[printer.toolhead.extruder].target|float %}
  {% set EXTRUDER_ACTUAL_TEMP = printer[printer.toolhead.extruder].temperature|float %}

  M117 Homing axis and leveling the gantry

  CHAMBER_WHITE
  STOP_SB_EFFECTS
  SET_NOZZLE_LEDS_OFF
  STATUS_HOMING

  {% if EXTRUDER_TARGET_TEMP > WARMING_TEMP %}
    M109 S{WARMING_TEMP} T0  ; wait for the temperature to drop
  {% endif %}

  G28                ; home all axis
  STATUS_LEVELING
  QUAD_GANTRY_LEVEL
  G28 Z              ; home just Z just in case QGL adjusted the rear Z steppers

  START_SB_EFFECTS

  {% if EXTRUDER_TARGET_TEMP > WARMING_TEMP %}
    M104 S{EXTRUDER_TARGET_TEMP} T0 ; restore original target tenmperature
  {% endif %}
  G1 X175 Y175 Z50 F7800            ; move toolhead to the center, raised up high
  M117

[gcode_macro START_PRINT]
gcode:
  CHAMBER_WHITE
  STOP_SB_EFFECTS
  SET_NOZZLE_LEDS_OFF
  STATUS_READY

  M117

  #Get Printer built volume dimensions
  {% set X_MAX = printer.toolhead.axis_maximum.x|default(235)|float %}
  {% set Y_MAX = printer.toolhead.axis_maximum.y|default(235)|float %}
  {% set Z_MAX = printer.toolhead.axis_maximum.z|default(270)|float %}

  #Get Nozzle diameter and filament width for conditioning
  {% set NOZZLE = printer.extruder.nozzle_diameter|default(0.4)|float %}
  {% set FILADIA = printer.extruder.filament_diameter|default(1.75)|float %}

  #Set Start coordinates of purge lines
  {% set X_START = 2.0|default(2.0)|float %}
  {% set Y_START = 10.0|default(10.0)|float %}

  #Calculate purge line extrusion volume and filament length
  {% set PRIMER_WIDTH = 1 * NOZZLE %}                    
  {% set PRIMER_HEIGHT = 0.5 * NOZZLE %}           
  {% set PRIMER_SECT = PRIMER_WIDTH * PRIMER_HEIGHT %}    
  {% set PRIMER_VOL = PRIMER_SECT * (Y_MAX - 3 - Y_START) * 2 %}    
  {% set FILA_SECT = 3.1415 * ( FILADIA / 2.0) * ( FILADIA / 2.0) %}          
  {% set FILA_LENGTH = 1.55 * PRIMER_VOL / FILA_SECT %}      

  #Get Bed and Extruder temperature from Slicer GCode
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
  {% set CHAMBER_TEMP = params.CHAMBER_TEMP|default(35)|float %}

  M104 S{EXTRUDER_TEMP} T0
  M190 S{BED_TEMP}                                

  #Home
  STATUS_HOMING
  G28

  #Park nozzle while things heat up
  G1 X{X_START} Y{Y_START-5} Z{PRIMER_HEIGHT} F6000.0

  STATUS_HEATING
  #Heat nozzle and bed
  M190 S{BED_TEMP}
  M109 S{EXTRUDER_TEMP} T0
  TEMPERATURE_WAIT SENSOR="temperature_sensor Chamber" MINIMUM={CHAMBER_TEMP}

  STATUS_HOMING
  G28 ; Home again now that things are hot
  QUAD_GANTRY_LEVEL
  G28 Z
  
  STATUS_READY   

  SET_FAN_SPEED FAN=exhaust_fan SPEED=0.2

  STATUS_BUSY
  SET_NOZZLE_LEDS_ON

  #Purge line
  G90
  G92 E0     
  G1 X{X_START} Y{Y_START} Z{PRIMER_HEIGHT} F6000.0     
  G1 X{X_START} Y{Y_MAX - 3 - Y_START} Z{PRIMER_HEIGHT} E{FILA_LENGTH} F2000.0 
  G1 X{X_START + PRIMER_WIDTH} Y{Y_MAX - 3 - Y_START} Z{PRIMER_HEIGHT} 
  G1 X{X_START + PRIMER_WIDTH} Y{Y_START} Z{PRIMER_HEIGHT} E{FILA_LENGTH*2} F2000.0 
  G92 E0            
  G1 Z2.0 F600        
  G1 Z0.2 F600        
  G1 Z2.0 F600

[gcode_macro END_PRINT]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
  SET_FAN_SPEED FAN=exhaust_fan SPEED=0.9
  M400                           ; wait for buffer to clear
  G92 E0                         ; zero the extruder
  G1 E-10.0 F3600                ; retract filament
  G91                            ; relative positioning
  #   Get Boundaries
  {% set X_MIN = printer.toolhead.axis_minimum.x|default(0)|float %}
  {% set Y_MAX = printer.toolhead.axis_maximum.y|default(235)|float %}
  {% set max_z = printer.toolhead.axis_maximum.z|default(270)|float %}
  {% if printer.toolhead.position.z < (max_z - 2) %}
    {% set z_safe = 2.0 %}
  {% else %}
    {% set z_safe = max_z - printer.toolhead.position.z %}
  {% endif %}
  G0 Z{z_safe} F3600             ; move nozzle up and present print
  G90
  G0 X{X_MIN} Y{Y_MAX} F3600
  TURN_OFF_HEATERS
  SET_NOZZLE_LEDS_OFF
  CHAMBER_PURPLE
  M107                           ; turn off fan
  #G28 X Y
  M84                            ; Disable steppers
  START_SB_EFFECTS

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  {% if printer.pause_resume.is_paused == False %}
    PAUSE
  {% endif %}
  G90
  TURN_OFF_HEATERS
  SET_FAN_SPEED FAN=exhaust_fan SPEED=0.9
  SET_NOZZLE_LEDS_OFF
  CHAMBER_RED
  M107                           ; turn off fan
  CANCEL_PRINT_BASE
  M84
  STOP_SB_EFFECTS

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_retract_extrude: 10.0
variable_extrude_extrude: 12.0
gcode:
  {% if printer.virtual_sdcard.is_active == True %}
    {% if printer.pause_resume.is_paused == False %}
      SET_FAN_SPEED FAN=exhaust_fan SPEED=0
      ##### read E from pause macro #####
      {% set E = printer["gcode_macro PAUSE"].retract_extrude|float %}
      ##### set park positon for x and y #####
      # default is your max/min position from your printer.cfg
      {% set x_park = printer.toolhead.axis_minimum.x|float + 5.0 %}
      {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
      ##### calculate save lift position #####
      {% set max_z = printer.toolhead.axis_maximum.z|float %}
      {% set act_z = printer.toolhead.position.z|float %}
      {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
      {% else %}
        {% set z_safe = max_z - act_z %}
      {% endif %}
      ##### end of definitions #####
      PAUSE_BASE
      G91
      {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E-{E} F2100
      {% else %}
        {action_respond_info("Extruder not hot enough")}
      {% endif %}
      {% if "xyz" in printer.toolhead.homed_axes %}
        G1 Z{z_safe} F900
        G90
        G1 X{x_park} Y{y_park} F6000
      {% else %}
        {action_respond_info("Printer not homed")}
      {% endif %} 
    {% endif %}
  {% endif %}
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  {% if printer.pause_resume.is_paused %}
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0.2
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude_extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}
  {% endif %}

[gcode_macro LOAD_FILAMENT]
gcode:
  {% set PREVIOUS_TEMP = printer[printer.toolhead.extruder].target|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(230)|float %}
  M117 Waiting for extruder to heat
  M109 S{EXTRUDER_TEMP} T0
  M83                            ; set extruder to relative
  M117 Loading filament
  G1 E30 F300                    ; load
  G1 E100 F1800                  ; purge and prime nozzle with filament
  M82                            ; set extruder to absolute
  M117 Filament load complete
  M104 S{PREVIOUS_TEMP} T0
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
  {% set PREVIOUS_TEMP = printer[printer.toolhead.extruder].target|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(230)|float %}
  M117 Waiting for extruder to heat
  M109 S{EXTRUDER_TEMP} T0
  M83                            ; set extruder to relative
  M117 Pulling filament back
  G1 E10 F150                    ; extrude a little to soften tip
  G1 E-100 F1800                 ; retract some, but not too much or it will jam
  M82                            ; set extruder to absolute
  M117 Filament unload complete
  M109 S{PREVIOUS_TEMP} T0

[gcode_macro DUMP_VARIABLES]
description: Shits out all Klipper variables to make it easy to find what you need for use in macros
gcode:
    {% set filter_name = params.NAME|default('')|string|lower %}
    {% set filter_value = params.VALUE|default('')|string|lower %}
    {% set show_cfg = params.SHOW_CFG|default(0)|int %}
    
    {% set out = [] %}

    {% for key1 in printer %}
        {% for key2 in printer[key1] %}
            {% if (show_cfg or not (key1|lower == 'configfile' and key2|lower in ['config', 'settings'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}
                {% set dummy = out.append("printer['%s'].%s = %s" % (key1, key2, printer[key1][key2])) %}
            {% endif %}
        {% else %}
            {% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}
                {% set dummy = out.append("printer['%s'] = %s" % (key1, printer[key1])) %}
            {% endif %}
        {% endfor %}
    {% endfor %}
    
    {action_respond_info(out|join("\n"))}