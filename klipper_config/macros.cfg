
[include speed_test.cfg]

[gcode_macro GOTO_CENTER]
description: Moves the print head to the center, 50mm above the plate
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes or not printer.quad_gantry_level.applied %}
    MOTION_INIT
  {% endif %}
  G1 X175 Y175 Z50 F7800


[gcode_macro MOTION_INIT]
description: Performs homing, gantry leveling, and Z-calibration
variable_warming_temp: 160
gcode:
  {% set EXTRUDER_TARGET_TEMP = printer[printer.toolhead.extruder].target|float %}
  {% set EXTRUDER_ACTUAL_TEMP = printer[printer.toolhead.extruder].temperature|float %}
  {% set TEMP_MODIFIED = False %}

  M117 Running MOTION_INIT

  CHAMBER_WHITE
  STOP_SB_EFFECTS
  SET_NOZZLE_LEDS_OFF
  
  {% if EXTRUDER_TARGET_TEMP > warming_temp or EXTRUDER_ACTUAL_TEMP > warming_temp %}
    M117 MOTION_INIT: nozzle cooling...
    STATUS_HEATING

    {% if EXTRUDER_ACTUAL_TEMP < warming_temp %}
      # since the actual temperature is below the warming temperature,
      # even though a higher temperature is set, just use that value
      # to make the heating stop where it is...
      M104 S{EXTRUDER_ACTUAL_TEMP} T0
    {% else %}
      # ...otherwise, wait for the temperature to drop
      M106 S200 ; turn on the part cooling fan, helps cool the nozzle
      M109 S{warming_temp} T0
      M106 S0   ; turn the part cooling fan back off
    {% endif %}

    {% set TEMP_MODIFIED = True %}
  {% endif %}

  M117 MOTION_INIT: Homing...
  STATUS_HOMING
  G28

  M117 MOTION_INIT: Leveling the gantry...
  STATUS_LEVELING
  QUAD_GANTRY_LEVEL
  M117 MOTION_INIT: Re-homing Z...
  G28 Z
  M117 MOTION_INIT: Calibrating Z offset...
  CALIBRATE_Z

  {% if TEMP_MODIFIED %}
    M117 MOTION_INIT: nozzle re-heating...
    STATUS_HEATING
    M104 S{EXTRUDER_TARGET_TEMP} T0 ; restore original target temperature and continue
  {% endif %}

  # move toolhead to the center, raised up high
  M117 MOTION_INIT: centering toolhead...
  G1 X175 Y175 Z50 F7800

  STATUS_READY
  M117 MOTION_INIT complete!

[gcode_macro START_PRINT]
gcode:
  CHAMBER_WHITE
  STOP_SB_EFFECTS
  SET_NOZZLE_LEDS_OFF
  STATUS_READY

  # ensure the exhaust fan isn't still runing from a previous job
  SET_FAN_SPEED FAN=exhaust_fan SPEED=0

  M117 Preparing to print...

  # Get Printer built volume dimensions
  {% set X_MAX = printer.toolhead.axis_maximum.x|default(300)|float %}
  {% set Y_MAX = printer.toolhead.axis_maximum.y|default(300)|float %}
  {% set Z_MAX = printer.toolhead.axis_maximum.z|default(300)|float %}

  # Get Nozzle diameter and filament width for conditioning
  {% set NOZZLE  = printer.extruder.nozzle_diameter|default(0.4)|float %}
  {% set FILADIA = printer.extruder.filament_diameter|default(1.75)|float %}

  # Set Start coordinates of purge lines
  {% set X_START = 2.0|default(2.0)|float %}
  {% set Y_START = 10.0|default(10.0)|float %}

  # Calculate purge line extrusion volume and filament length
  {% set PRIMER_WIDTH  = 1.25 * NOZZLE %}                    
  {% set PRIMER_HEIGHT = 0.65 * NOZZLE %}           
  {% set PRIMER_SECT   = PRIMER_WIDTH * PRIMER_HEIGHT %}    
  {% set PRIMER_VOL    = PRIMER_SECT * (Y_MAX - 3 - Y_START) * 2 %}    
  {% set FILA_SECT     = 3.1415 * ( FILADIA / 2.0) * ( FILADIA / 2.0) %}          
  {% set FILA_LENGTH   = 1.55 * PRIMER_VOL / FILA_SECT %}      

  # Get Bed and Extruder temperature from Slicer GCode
  {% set BED_TEMP      = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(230)|float %}
  {% set CHAMBER_TEMP  = params.CHAMBER_TEMP|default(35)|float %}

  {% set QGL_OK = printer.quad_gantry_level.applied %}

  M104 S{EXTRUDER_TEMP} T0 ; set extruder temperature and continue
  M140 S{BED_TEMP}         ; set bed temperature and continue

  {% if "xyz" not in printer.toolhead.homed_axes %}
    {% set QGL_OK = False %}
    M117 Preparing to print; homing...
    STATUS_HOMING
    G28
  {% endif %}

  {% if not QGL_OK %}
    M117 Preparing to print; leveling...
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
  {% endif %}

  M117 Preparing to print; warming up...
  STATUS_HEATING
  M109 S{EXTRUDER_TEMP} T0  ; set extruder temperature and wait (just to be certain, might already be up to temperature by now)
  M190 S{BED_TEMP}          ; set bed temperature and wait
  TEMPERATURE_WAIT SENSOR="temperature_sensor Chamber" MINIMUM={CHAMBER_TEMP}
  
  M117 Preparing to print; cleaning nozzle...
  STATUS_CLEANING
  CLEAN_NOZZLE

  M117 Preparing to print; re-homing Z...
  STATUS_LEVELING
  G28 Z
  M117 Preparing to print; calibrating Z...
  CALIBRATE_Z
  BED_MESH_PROFILE LOAD="default"
  
  STATUS_READY

  SET_FAN_SPEED FAN=exhaust_fan SPEED=0.2

  STATUS_BUSY
  SET_NOZZLE_LEDS_ON

  M117 Preparing to print; taking a quick shit...
  G90
  G92 E0     
  G1 X{X_START} Y{Y_START} Z{PRIMER_HEIGHT} F6000.0     
  G1 X{X_START} Y{Y_MAX - 3 - Y_START} Z{PRIMER_HEIGHT} E{FILA_LENGTH} F2000.0 
  G1 X{X_START + PRIMER_WIDTH} Y{Y_MAX - 3 - Y_START} Z{PRIMER_HEIGHT} 
  G1 X{X_START + PRIMER_WIDTH} Y{Y_START} Z{PRIMER_HEIGHT} E{FILA_LENGTH*2} F2000.0 
  G92 E0

  # De-string -- run cooling fan, jump up and down, stop cooling fan
  M106 S127.5
  G1 Z2.0 F2000
  G1 Z1.0 F500
  G1 Z3.0 F2000
  G1 Z2.0 F500
  G1 Z4.0 F2000
  G1 Z3.0 F500
  M106 S0

  M117

[gcode_macro END_PRINT]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
  SET_FAN_SPEED FAN=exhaust_fan SPEED=0.9
  M400                           ; wait for buffer to clear
  G92 E0                         ; zero the extruder
  G1 E-10.0 F3600                ; retract filament
  G91                            ; relative positioning
  #   Get Boundaries
  {% set X_MIN = printer.toolhead.axis_minimum.x|default(0)|float %}
  {% set Y_MAX = printer.toolhead.axis_maximum.y|default(235)|float %}
  {% set max_z = printer.toolhead.axis_maximum.z|default(270)|float %}
  {% if printer.toolhead.position.z < (max_z - 2) %}
    {% set z_safe = 2.0 %}
  {% else %}
    {% set z_safe = max_z - printer.toolhead.position.z %}
  {% endif %}
  G0 Z{z_safe} F3600             ; move nozzle up and present print
  G90
  G0 X{X_MIN} Y{Y_MAX} F3600
  TURN_OFF_HEATERS
  SET_NOZZLE_LEDS_OFF
  CHAMBER_PURPLE
  M107                           ; turn off fan
  #G28 X Y
  M84                            ; Disable steppers
  START_SB_EFFECTS

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  {% if printer.pause_resume.is_paused == False %}
    PAUSE
  {% endif %}
  G90
  TURN_OFF_HEATERS
  SET_FAN_SPEED FAN=exhaust_fan SPEED=0.9
  SET_NOZZLE_LEDS_OFF
  CHAMBER_RED
  M107                           ; turn off fan
  CANCEL_PRINT_BASE
  M84
  STOP_SB_EFFECTS

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_retract_extrude: 10.0
variable_extrude_extrude: 12.0
gcode:
  {% if printer.virtual_sdcard.is_active == True %}
    {% if printer.pause_resume.is_paused == False %}
      SET_FAN_SPEED FAN=exhaust_fan SPEED=0
      ##### read E from pause macro #####
      {% set E = printer["gcode_macro PAUSE"].retract_extrude|float %}
      ##### set park positon for x and y #####
      # default is your max/min position from your printer.cfg
      {% set x_park = printer.toolhead.axis_minimum.x|float + 5.0 %}
      {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
      ##### calculate save lift position #####
      {% set max_z = printer.toolhead.axis_maximum.z|float %}
      {% set act_z = printer.toolhead.position.z|float %}
      {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
      {% else %}
        {% set z_safe = max_z - act_z %}
      {% endif %}
      ##### end of definitions #####
      PAUSE_BASE
      G91
      {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E-{E} F2100
      {% else %}
        {action_respond_info("Extruder not hot enough")}
      {% endif %}
      {% if "xyz" in printer.toolhead.homed_axes %}
        G1 Z{z_safe} F900
        G90
        G1 X{x_park} Y{y_park} F6000
      {% else %}
        {action_respond_info("Printer not homed")}
      {% endif %} 
    {% endif %}
  {% endif %}
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  {% if printer.pause_resume.is_paused %}
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0.2
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude_extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}
  {% endif %}

[gcode_macro LOAD_FILAMENT]
gcode:
  STOP_SB_EFFECTS
  STATUS_CLEANING
  {% set CURRENT_TEMP = printer[printer.toolhead.extruder].target|float %}
  {% set DESIRED_TEMP = params.EXTRUDER_TEMP|default(230)|float %}
  
  # M83                          ; set extruder to relative
  #   M117 Pre-loading filament
  #   {% set MIN_EXTRUDE_TEMP = printer['configfile'].config.extruder.min_extrude_temp %}
  #   {% set printer['configfile'].config.extruder.min_extrude_temp = 0 %}
  #   G1 E10 F300                ; load just a little now, even though we might not be hot enough to extrude any, just so we know we've grabbed it
  #   {% set printer['configfile'].config.extruder.min_extrude_temp = MIN_EXTRUDE_TEMP %}
  # M82                          ; set extruder to absolute

  {% if DESIRED_TEMP > CURRENT_TEMP %}
    M117 Waiting for extruder to heat
    M109 S{DESIRED_TEMP} T0
  {% endif %}

  {% if "xyz" in printer.toolhead.homed_axes %}
    ; If we're homed, then its safe to prime/purge a length of filament...

    {% if printer['toolhead'].position.z >= 100.0 %}
      G1 X175 Y175 F7800       ; Looks like we're already high enough, just go to the center
    {% else %}
      G1 X175 Y175 Z110 F7800  ; Move to the center, but raise up so the extrudent doesn't wad up
    {% endif %}

    M106 S127.5                ; set part cooling fan to 50%

    M83                        ; set extruder to relative
      M117 Priming filament
      G1 E100 F200             ; purge and prime nozzle with filament
    M82                        ; set extruder to absolute

    M106 S0                    ; stop part cooling fan
    
  {% else %}
    ; ...or if we're not homed, then just push filament to the nozzle
    M83                        ; set extruder to relative
      M117 Priming filament
      G1 E20 F300              ; purge and prime nozzle with filament
    M82                        ; set extruder to absolute
  {% endif %}

  M117 Filament load complete
  M104 S{CURRENT_TEMP} T0
  STATUS_READY
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
  STOP_SB_EFFECTS
  STATUS_CLEANING
  {% set CURRENT_TEMP = printer[printer.toolhead.extruder].target|float %}
  {% set DESIRED_TEMP = params.EXTRUDER_TEMP|default(230)|float %}

  {% if DESIRED_TEMP > CURRENT_TEMP %}
    M117 Waiting for extruder to heat
    M109 S{DESIRED_TEMP} T0
  {% endif %}
  M83                            ; set extruder to relative
    M117 Pulling filament back
    G1 E10 F150                  ; extrude a little to soften tip
    G1 E-100 F1800               ; retract
  M82                            ; set extruder to absolute
  M117 Filament unload complete
  M104 S{CURRENT_TEMP} T0
  STATUS_READY

[gcode_macro DUMP_VARIABLES]
description: Shits out all Klipper variables to make it easy to find what you need for use in macros
gcode:
    {% set filter_name = params.NAME|default('')|string|lower %}
    {% set filter_value = params.VALUE|default('')|string|lower %}
    {% set show_cfg = params.SHOW_CFG|default(0)|int %}
    
    {% set out = [] %}

    {% for key1 in printer %}
        {% for key2 in printer[key1] %}
            {% if (show_cfg or not (key1|lower == 'configfile' and key2|lower in ['config', 'settings'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}
                {% set dummy = out.append("printer['%s'].%s = %s" % (key1, key2, printer[key1][key2])) %}
            {% endif %}
        {% else %}
            {% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}
                {% set dummy = out.append("printer['%s'] = %s" % (key1, printer[key1])) %}
            {% endif %}
        {% endfor %}
    {% endfor %}
    
    {action_respond_info(out|join("\n"))}

[gcode_macro CLEAN_NOZZLE]
variable_start_x: 250
variable_start_y: 350
variable_start_z: 6
variable_wipe_dist_x: 60
variable_wipe_dist_y: -5
variable_wipe_qty: 10
variable_wipe_spd: 200
variable_raise_distance: 20
gcode:
  M117 Cleaning nozzle

  {% if "xyz" not in printer.toolhead.homed_axes %}
    {action_respond_info("Toolhead has not been homed; nozzle cleaning cancelled")}
    M117 Nozzle cleaning cancelled
  {% else %}

    {% set CURRENT_TEMP = printer[printer.toolhead.extruder].target|float %}
    {% set DESIRED_TEMP = params.EXTRUDER_TEMP|default(240)|float %}

    {% if DESIRED_TEMP > CURRENT_TEMP %}
      M117 Waiting for extruder to heat
      STATUS_HEATING
      M109 S{DESIRED_TEMP} T0
    {% endif %}

    STATUS_CLEANING

    G90 ; absolute positioning
    
    ## Move nozzle to start position
    G1 X{start_x} Y{start_y} Z{start_z + raise_distance} F6000
    G1 Z{start_z} F1500

    ## Wipe nozzle
    {% for wipes in range(1, (wipe_qty + 1)) %}
      G1 X{start_x + wipe_dist_x} Y{start_y + wipe_dist_y} F{wipe_spd * 60}
      G1 X{start_x} Y{start_y} F{wipe_spd * 60}
    {% endfor %}

    ## Raise nozzle
    G1 Z{raise_distance}

    M117 Nozzle cleaning complete
    M104 S{CURRENT_TEMP} T0
    STATUS_READY

  {% endif %}

[gcode_macro M73]
rename_existing: M073
description: Override Klipper's interpretation of M73 to include time remaining
gcode:
  M073 P{ params.P|int}
  M117 { "%02d:%02d" % (params.R|int // 60, (params.R|int) % 60) } remaining
